import os
from data_collection import (
    alpha_performance_2,
    output_csv_11,
    alpha_performance_1,
)
import time, secrets
import matplotlib.pyplot as plt

rep = 100   #number of times to calculate before averaging keygen, encry, decry
m = 2**16 - 1   #maximum message size

output_dir = "analysis_tests"   #place csvs in this folder

def run_analysis_fahe1():
    # FAHE1
    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_1(5, 50, 5, rep, 128, 32, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe1_alpha_performance_1.csv"),
    )

    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_1(5, 50, 5, rep, 128, 64, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe1_alpha_performance_2"),
    )

    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_1(5, 50, 5, rep, 256, 32, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe1_alpha_performance_3"),
    )

    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_1(5, 50, 5, rep, 256, 64, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe1_alpha_performance_4"),
    )


def run_analysis_fahe2():
    # FAHE2
    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_2(5, 50, 5, rep, 128, 32, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe2_alpha_performance_1"),
    )

    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_2(5, 50, 5, rep, 128, 64, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe2_alpha_performance_2"),
    )

    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_2(5, 50, 5, rep, 256, 32, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe2_alpha_performance_3"),
    )

    (
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
    ) = alpha_performance_2(5, 50, 5, rep, 256, 64, m)
    output_csv_11(
        alphas,
        rhos,
        etas,
        gammas,
        keygen_times,
        enc_times,
        dec_times,
        total_times,
        clengths,
        lambdas,
        m_maxes,
        "alpha",
        "rho",
        "eta",
        "gamma",
        "keygen time/ms",
        "encryption time/ms",
        "decryption time/ms",
        "total time/ms",
        "ciphertext length in bits",
        "lambda",
        "m_max",
        file_name=os.path.join(output_dir, "fahe2_alpha_performance_4",)
    )


run_analysis_fahe1()

run_analysis_fahe2()
